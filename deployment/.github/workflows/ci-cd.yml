name: Lexova Platform CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production

jobs:
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          cd backend/lexova_backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov
      
      - name: Run tests
        run: |
          cd backend/lexova_backend
          python -m pytest tests/ --cov=src
  
  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/lexova_frontend/package-lock.json
      
      - name: Install dependencies
        run: |
          cd frontend/lexova_frontend
          npm ci
      
      - name: Run tests
        run: |
          cd frontend/lexova_frontend
          npm test -- --watchAll=false
      
      - name: Run linting
        run: |
          cd frontend/lexova_frontend
          npm run lint
  
  backend-build:
    name: Backend Build
    needs: backend-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}/backend
          tags: |
            type=ref,event=branch
            type=sha,format=short
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./backend/lexova_backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  
  frontend-build:
    name: Frontend Build
    needs: frontend-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/lexova_frontend/package-lock.json
      
      - name: Install dependencies
        run: |
          cd frontend/lexova_frontend
          npm ci
      
      - name: Build
        run: |
          cd frontend/lexova_frontend
          npm run build
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: frontend/lexova_frontend/build
  
  deploy-development:
    name: Deploy to Development
    needs: [backend-build, frontend-build]
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' && github.ref == 'refs/heads/develop') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'development')
    environment: development
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Download frontend build
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: frontend/lexova_frontend/build
      
      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Deploy backend to Azure Container Apps
        run: |
          cd deployment/azure
          chmod +x deploy_backend.sh
          ./deploy_backend.sh
        env:
          AZURE_RESOURCE_GROUP: lexova-dev-rg
          AZURE_CONTAINER_APP_NAME: lexova-backend-dev
          AZURE_CONTAINER_APP_ENV: lexova-env-dev
          CONTAINER_IMAGE_NAME: ghcr.io/${{ github.repository }}/backend:${{ github.sha }}
      
      - name: Deploy frontend to Azure Static Web Apps
        run: |
          cd deployment/azure
          chmod +x deploy_frontend.sh
          ./deploy_frontend.sh
        env:
          AZURE_RESOURCE_GROUP: lexova-dev-rg
          AZURE_STATIC_WEB_APP_NAME: lexova-frontend-dev
  
  deploy-staging:
    name: Deploy to Staging
    needs: [backend-build, frontend-build]
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    environment: staging
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Download frontend build
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: frontend/lexova_frontend/build
      
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Deploy backend to AWS ECS
        run: |
          cd deployment/aws
          chmod +x deploy_backend.sh
          ./deploy_backend.sh
        env:
          AWS_REGION: us-east-1
          ECR_REPOSITORY_NAME: lexova-backend-staging
          ECS_CLUSTER_NAME: lexova-cluster-staging
          ECS_SERVICE_NAME: lexova-backend-service-staging
      
      - name: Deploy frontend to AWS S3/CloudFront
        run: |
          cd deployment/aws
          chmod +x deploy_frontend.sh
          ./deploy_frontend.sh
        env:
          AWS_REGION: us-east-1
          S3_BUCKET_NAME: lexova-frontend-staging
          DOMAIN_NAME: staging.lexova.com
  
  deploy-production:
    name: Deploy to Production
    needs: deploy-staging
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    environment: production
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Download frontend build
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: frontend/lexova_frontend/build
      
      - name: Set up GCP CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
      
      - name: Deploy backend to GCP Cloud Run
        run: |
          cd deployment/gcp
          chmod +x deploy_backend.sh
          ./deploy_backend.sh
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_REGION: us-central1
          SERVICE_NAME: lexova-backend-prod
      
      - name: Deploy frontend to Firebase Hosting
        run: |
          cd deployment/gcp
          chmod +x deploy_frontend.sh
          ./deploy_frontend.sh
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          FIREBASE_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          DOMAIN_NAME: lexova.com

